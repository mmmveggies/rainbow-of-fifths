{"version":3,"sources":["hooks/make-use-settings.tsx","hooks/use-sizes.ts","hooks/use-colors.tsx","hooks/index.tsx","utils/number.ts","components/keyboard.tsx","components/circle-of-fifths.tsx","utils/shapes.ts","components/input-colors.tsx","components/input-sizes.tsx","components/source-dashboard.tsx","utils/object.ts","hooks/use-source-notes.ts","App.tsx","hooks/use-sources.ts","index.tsx"],"names":["makeUseSettings","storageKey","defaultValue","read","JSON","parse","localStorage","getItem","stringify","write","value","setItem","removeItem","ctx","React","createContext","useContext","children","useState","current","setCurrent","useMemo","next","Provider","useSizes","ProvideSizes","useColors","ProvideColors","ProvideShared","intBetween","n","min","max","Math","floor","OFFSET_BLACK","1","3","6","8","10","isAccidental","chroma","includes","isAccidentalMidi","midi","Note","Midi","midiToNoteName","Keyboard","low","high","keyProps","svgProps","start","end","length","midis","Array","from","_","index","head","last","unshift","push","notes","map","i","offset","slice","filter","note","accidental","rect","key","x","width","height","whiteKeys","blackKeys","viewBox","fill","stroke","fontSize","textAnchor","WIDTH_WHITE","y","HEIGHT_WHITE","sharps","sum","arr","reduce","CircleOfFifths","pathProps","sizes","center","size","donuts","r0","r1","cX","cY","theta","PI","k","points","x0","sin","y0","cos","x1","y1","x2","y2","x3","y3","paths","v","join","getDonutSegments","strokeWidth","d","j","degreeIndex","props","names","Set","pitchClass","InputColors","colors","setColors","style","display","flexDirection","justifyContent","onConfirm","undefined","title","block","type","onChange","event","currentTarget","addonAfter","Text","strong","InputSizes","setSizes","target","SourceDashboard","obj","fn","source","setNotes","useEffect","onNoteOn","curr","number","onNoteOff","addListener","removeListener","useSourceNotes","pressed","Object","keys","fromEntries","entries","tonic","name","has","span","empty","message","App","sources","WebMidi","inputs","setSources","onConnected","port","id","onDisconnected","removed","useSources","align","gutter","href","manufacturer","render","node","ReactDOM","document","getElementById","enable","err","description","StrictMode"],"mappings":"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","file":"static/js/main.e9177039.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function makeUseSettings<T>(\r\n\tstorageKey: string,\r\n\tdefaultValue: T,\r\n) {\r\n\tconst read = (): T => {\r\n\t\treturn JSON.parse(\r\n\t\t\tlocalStorage.getItem(storageKey) ?? JSON.stringify(defaultValue)\r\n\t\t)\r\n\t}\r\n\r\n\tconst write = (value?: T) => {\r\n\t\tif (value == null) {\r\n\t\t\tlocalStorage.removeItem(storageKey)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlocalStorage.setItem(storageKey, JSON.stringify(value))\r\n\t}\r\n\r\n\tconst ctx = React.createContext([read(), write] as const)\r\n\r\n\tconst useHook = () => React.useContext(ctx)\r\n\r\n\tconst Provider: React.FC = ({ children }) => {\r\n\t\tconst [current, setCurrent] = React.useState(read)\r\n\t\tconst value = React.useMemo(\r\n\t\t\t() => [\r\n\t\t\t\tcurrent,\r\n\t\t\t\t(next?: T) => {\r\n\t\t\t\t\twrite(next)\r\n\t\t\t\t\tsetCurrent(next ?? defaultValue)\r\n\t\t\t\t}\r\n\t\t\t] as const,\r\n\t\t\t[current]\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<ctx.Provider value={value}>\r\n\t\t\t\t{children}\r\n\t\t\t</ctx.Provider>\r\n\t\t)\r\n\t}\r\n\r\n\treturn [useHook, Provider] as const\r\n}","import { makeUseSettings } from './make-use-settings'\r\n\r\nconst KEY = 'sizes'\r\n\r\nconst defaultSizes = [\r\n\t24,\r\n\t4,\r\n\t12,\r\n\t4,\r\n\t12,\r\n\t16,\r\n\t4,\r\n\t20,\r\n\t4,\r\n\t16,\r\n\t4,\r\n\t16\r\n]\r\n\r\nexport const [useSizes, ProvideSizes] = makeUseSettings(\r\n\tKEY,\r\n\tdefaultSizes,\r\n)","import { makeUseSettings } from './make-use-settings'\r\n\r\nconst KEY = 'colors'\r\n\r\n//http://www.creativecolorschemes.com/resources/free-color-schemes/common-color-scheme.shtml#:~:text=The%20Common%20scheme%20primary%20contains,green%20are%20added%20for%20variety.\r\nconst defaultColors = [\r\n\t'#002685',\r\n\t'#449ADF',\r\n\t'#4DC7FD',\r\n\t'#4CDE77',\r\n\t'#5E53C7',\r\n\t'#7E77D2',\r\n\t'#CD1E10',\r\n\t'#FC007F',\r\n\t'#FE79D1',\r\n\t'#763931',\r\n\t'#F1AB00',\r\n\t'#FADF00',\r\n]\r\n\r\nexport const [useColors, ProvideColors] = makeUseSettings(\r\n\tKEY,\r\n\tdefaultColors,\r\n)","import React from 'react'\r\nimport { ProvideSizes } from './use-sizes'\r\nimport { ProvideColors } from './use-colors'\r\n\r\nexport * from './use-sources'\r\nexport * from './use-source-notes'\r\nexport * from './use-colors'\r\nexport * from './use-sizes'\r\n\r\nexport function ProvideShared({ children }: React.Props<{}>) {\r\n\treturn (\r\n\t\t<ProvideSizes>\r\n\t\t\t<ProvideColors>\r\n\t\t\t\t{children}\r\n\t\t\t</ProvideColors>\r\n\t\t</ProvideSizes>\r\n\t)\r\n}","/**\r\n * inclusive between\r\n */\r\nexport function intBetween(n: number, min: number, max: number) {\r\n\treturn Math.min(Math.max(Math.floor(n), min), max)\r\n}","import React from 'react'\r\nimport { Midi, Note } from '@tonaljs/tonal'\r\nimport { intBetween } from '../utils'\r\n\r\n// Thanks to https://en.wikipedia.org/wiki/User:Lanttuloora for measurements\r\n// taken from https://commons.wikimedia.org/wiki/File:PianoKeyboard.svg\r\n\r\nconst WIDTH_WHITE = 23\r\nconst WIDTH_BLACK = 13\r\nconst HEIGHT_WHITE = 120\r\nconst HEIGHT_BLACK = 80\r\nconst OFFSET_BLACK: Record<number, number> = {\r\n\t1: -8 - (2 / 3),\r\n\t3: -4 - (1 / 3),\r\n\t6: -9.75,\r\n\t8: -6.75,\r\n\t10: -3.25,\r\n}\r\n\r\nconst isAccidental = (chroma: number) => (\r\n\t[1, 3, 6, 8, 10].includes(chroma)\r\n)\r\n\r\n/** will throw on invalid midi value */\r\nconst isAccidentalMidi = (midi: number) => (\r\n\tisAccidental(Note.chroma(Midi.midiToNoteName(midi))!)\r\n)\r\n\r\nexport interface KeyboardProps {\r\n\t/**\r\n\t * Lowest key on the keyboard. Must be >= 0.\r\n\t * @default 21 // (aka A0)\r\n\t */\r\n\tlow?: number\r\n\r\n\t/**\r\n\t * Highest key on the keyboard. Must be <= 127.\r\n\t * @default 108 // (aka C8)\r\n\t */\r\n\thigh?: number\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tkeyProps?: Record<string, React.SVGProps<SVGRectElement>>\r\n\r\n\tsvgProps?: React.SVGProps<SVGSVGElement>\r\n}\r\n\r\nexport function Keyboard({\r\n\tlow = 21,\r\n\thigh = 109,\r\n\tkeyProps,\r\n\tsvgProps,\r\n}: KeyboardProps) {\r\n\r\n\tconst start = intBetween(low, 21, 109)\r\n\tconst end = intBetween(high, 21, 109)\r\n\tconst length = Math.max(0, end - start)\r\n\r\n\t// pad out the with white notes to\r\n\t// ensure framing is an even rectagle\r\n\tconst [whiteKeys, blackKeys] = React.useMemo(\r\n\t\t() => {\r\n\t\t\tconst midis = Array.from({ length }, (_, index) => (\r\n\t\t\t\tstart + index\r\n\t\t\t))\r\n\r\n\t\t\tconst head = midis[0]\r\n\t\t\tconst last = midis[midis.length - 1]\r\n\r\n\t\t\tif (isAccidentalMidi(head)) {\r\n\t\t\t\tmidis.unshift(head - 1)\r\n\t\t\t}\r\n\t\t\tif (isAccidentalMidi(last)) {\r\n\t\t\t\tmidis.push(last + 1)\r\n\t\t\t}\r\n\r\n\t\t\tconst notes = midis.map((midi, i) => {\r\n\t\t\t\tconst skips = midis.slice(0, i).filter(isAccidentalMidi).length\r\n\t\t\t\tconst offset = skips * WIDTH_WHITE\r\n\r\n\t\t\t\tconst note = Midi.midiToNoteName(midi)\r\n\t\t\t\tconst chroma = Note.chroma(note)!\r\n\t\t\t\tconst accidental = isAccidental(chroma)\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmidi,\r\n\t\t\t\t\toffset,\r\n\t\t\t\t\taccidental,\r\n\t\t\t\t\trect: {\r\n\t\t\t\t\t\tkey: midi,\r\n\t\t\t\t\t\tx: (i * WIDTH_WHITE - offset) + (accidental ? OFFSET_BLACK[chroma] : 0),\r\n\t\t\t\t\t\twidth: accidental ? WIDTH_BLACK : WIDTH_WHITE,\r\n\t\t\t\t\t\theight: accidental ? HEIGHT_BLACK : HEIGHT_WHITE,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnotes.filter((note) => !note.accidental),\r\n\t\t\t\tnotes.filter((note) => note.accidental)\r\n\t\t\t]\r\n\t\t},\r\n\t\t[start, length]\r\n\t)\r\n\r\n\tif (!length) {\r\n\t\treturn (<h1>No keys in midi range: [{low},{high}]</h1>)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<svg {...svgProps} viewBox={`0 0 ${WIDTH_WHITE * whiteKeys.length} ${HEIGHT_WHITE}`}>\r\n\r\n\t\t\t<g fill='white' stroke='black'>\r\n\t\t\t\t{whiteKeys.map((note, i) => (\r\n\t\t\t\t\t<rect\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t{...note.rect}\r\n\t\t\t\t\t\t{...keyProps?.[note.midi]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</g>\r\n\r\n\t\t\t<g fill='black' fontSize={12} textAnchor='middle'>\r\n\t\t\t\t{whiteKeys.map((note, i) => (\r\n\t\t\t\t\t<text\r\n\t\t\t\t\t\tkey={note.midi}\r\n\t\t\t\t\t\tx={(i * WIDTH_WHITE) + (WIDTH_WHITE / 2)}\r\n\t\t\t\t\t\ty={HEIGHT_WHITE - 10}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Midi.midiToNoteName(note.midi, { sharps: true, })}\r\n\t\t\t\t\t</text>\r\n\t\t\t\t))}\r\n\t\t\t</g>\r\n\r\n\t\t\t<g fill='black' stroke='black'>\r\n\t\t\t\t{blackKeys.map((note, i) => (\r\n\t\t\t\t\t<rect\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\t\t{...note.rect}\r\n\t\t\t\t\t\t{...keyProps?.[note.midi]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t)\r\n}","import React from 'react'\r\nimport { Midi, Note } from '@tonaljs/tonal'\r\nimport { getDonutSegments } from '../utils'\r\nimport { useSizes } from '../hooks'\r\n\r\nconst CHROMA = 12\r\n\r\nconst sum = (arr: number[]) => arr.reduce((sum, n) => sum + n, 0)\r\n\r\nexport interface CircleOfFifthsProps {\r\n\tsvgProps?: React.SVGProps<SVGSVGElement>\r\n\tpathProps?: React.SVGProps<SVGPathElement>[][]\r\n}\r\n\r\nexport function CircleOfFifths({\r\n\tsvgProps,\r\n\tpathProps,\r\n}: CircleOfFifthsProps) {\r\n\tconst [sizes] = useSizes()\r\n\r\n\tconst center = sum(sizes)\r\n\tconst size = center * 2\r\n\r\n\tconst donuts = React.useMemo(\r\n\t\t() => {\r\n\t\t\treturn Array.from({ length: CHROMA }, (_, i) => {\r\n\t\t\t\tconst r0 = center - sum(sizes.slice(0, i))\r\n\t\t\t\tconst r1 = center - sum(sizes.slice(0, i + 1))\r\n\t\t\t\treturn getDonutSegments({\r\n\t\t\t\t\tcX: center,\r\n\t\t\t\t\tcY: center,\r\n\t\t\t\t\tr0,\r\n\t\t\t\t\tr1,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\t[center, sizes],\r\n\t)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<svg {...svgProps} viewBox={`0 0 ${size} ${size}`}>\r\n\t\t\t<g stroke='black' fill='white' strokeWidth='0.1'>\r\n\t\t\t\t{donuts.map(({ paths }, i) => (\r\n\t\t\t\t\t<g key={i}>\r\n\t\t\t\t\t\t{paths.map((d, j) => {\r\n\t\t\t\t\t\t\t// props are ordered spiralling clockwise\r\n\t\t\t\t\t\t\t// and inwards from 12 oclock\r\n\t\t\t\t\t\t\tconst scaleIndex = (j * 5) % 12\r\n\t\t\t\t\t\t\tconst degreeIndex = (i + 4) % 12\r\n\t\t\t\t\t\t\tconst props = pathProps?.[scaleIndex]?.[degreeIndex]\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\tkey={j}\r\n\t\t\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\t\t\td={d}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</g>\r\n\t\t\t\t))}\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t)\r\n}\r\n","\r\nexport interface DonutSegmentsConfig {\r\n\t/** center point X coordinate */\r\n\tcX: number\r\n\r\n\t/** center point Y coordinate */\r\n\tcY: number\r\n\r\n\t/** outer radius length */\r\n\tr0: number\r\n\r\n\t/** inner radius length */\r\n\tr1: number\r\n\r\n\t/** number of donut segments */\r\n\tlength?: number\r\n\r\n\t/** rotation of donut */\r\n\ttheta?: number\r\n}\r\n\r\nexport function getDonutSegments({\r\n\tcX,\r\n\tcY,\r\n\tr0,\r\n\tr1,\r\n\tlength = 12,\r\n\ttheta = Math.PI / length\r\n}: DonutSegmentsConfig) {\r\n\tconst k = 2 * Math.PI / length\r\n\r\n\tconst points = Array.from({ length }, (_, n) => ({\r\n\t\tx0: cX + r0 * Math.sin(theta + k * n),\r\n\t\ty0: cY + r0 * Math.cos(theta + k * n),\r\n\t\tx1: cX + r0 * Math.sin(theta + k * (n + 1)),\r\n\t\ty1: cY + r0 * Math.cos(theta + k * (n + 1)),\r\n\t\tx2: cX + r1 * Math.sin(theta + k * (n + 1)),\r\n\t\ty2: cY + r1 * Math.cos(theta + k * (n + 1)),\r\n\t\tx3: cX + r1 * Math.sin(theta + k * n),\r\n\t\ty3: cY + r1 * Math.cos(theta + k * n),\r\n\t}))\r\n\r\n\tconst paths = points.map((v) => [\r\n\t\t`M ${v.x0} ${v.y0}`,\r\n\t\t`A ${r0} ${r0} 0 0 0 ${v.x1} ${v.y1}`,\r\n\t\t`L ${v.x2} ${v.y2}`,\r\n\t\t`A ${r1} ${r1} 0 0 1 ${v.x3} ${v.y3}`,\r\n\t\t`Z`\r\n\t].join('\\n'))\r\n\r\n\treturn { points, paths }\r\n}","import React from 'react'\r\nimport { Input, Typography, Button, Popconfirm } from 'antd'\r\nimport { Midi } from '@tonaljs/tonal'\r\nimport { useColors } from '../hooks'\r\n\r\nconst names = Array.from({ length: 12 }, (_, i) => {\r\n\treturn Array.from(\r\n\t\tnew Set([\r\n\t\t\tMidi.midiToNoteName(i, { pitchClass: true }),\r\n\t\t\tMidi.midiToNoteName(i, { pitchClass: true, sharps: true }),\r\n\t\t])\r\n\t).join(' / ')\r\n})\r\n\r\nexport function InputColors() {\r\n\tconst [colors, setColors] = useColors()\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\theight: '100%',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\tjustifyContent: 'space-evenly'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Popconfirm\r\n\t\t\t\tonConfirm={() => setColors(undefined)}\r\n\t\t\t\ttitle='Reset to default colors?'\r\n\t\t\t>\r\n\t\t\t\t<Button block>\r\n\t\t\t\t\tReset Colors\r\n\t\t\t\t</Button>\r\n\t\t\t</Popconfirm>\r\n\t\t\t{Array.from({ length: 12 }, (_, i) => (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\ttype='color'\r\n\t\t\t\t\tsize='large'\r\n\t\t\t\t\tvalue={colors[i]}\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tconst next = colors.slice()\r\n\t\t\t\t\t\tnext[i] = event.currentTarget.value\r\n\t\t\t\t\t\tsetColors(next)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\taddonAfter={(\r\n\t\t\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t\t\t{names[i]}\r\n\t\t\t\t\t\t</Typography.Text>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { Input, Typography, Button, Popconfirm } from 'antd'\r\nimport { Midi } from '@tonaljs/tonal'\r\nimport { useSizes } from '../hooks'\r\n\r\nconst names = Array.from({ length: 12 }, (_, i) => {\r\n\treturn Array.from(\r\n\t\tnew Set([\r\n\t\t\tMidi.midiToNoteName(i, { pitchClass: true }),\r\n\t\t\tMidi.midiToNoteName(i, { pitchClass: true, sharps: true }),\r\n\t\t])\r\n\t).join(' / ')\r\n})\r\n\r\nexport function InputSizes() {\r\n\tconst [sizes, setSizes] = useSizes()\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\theight: '100%',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\tjustifyContent: 'space-evenly'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Popconfirm\r\n\t\t\t\tonConfirm={() => setSizes(undefined)}\r\n\t\t\t\ttitle='Reset to default sizes?'\r\n\t\t\t>\r\n\t\t\t\t<Button block>\r\n\t\t\t\t\tReset Sizes\r\n\t\t\t\t</Button>\r\n\t\t\t</Popconfirm>\r\n\t\t\t{Array.from({ length: 12 }, (_, i) => (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tmin={0}\r\n\t\t\t\t\tmax={30}\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tsize='large'\r\n\t\t\t\t\tvalue={sizes[i]}\r\n\t\t\t\t\tonChange={({ target: { value } }) => {\r\n\t\t\t\t\t\tif (value === '') {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst next = sizes.slice()\r\n\t\t\t\t\t\tnext[i] = +value\r\n\t\t\t\t\t\tsetSizes(next)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\taddonAfter={(\r\n\t\t\t\t\t\t<Typography.Text strong>\r\n\t\t\t\t\t\t\t{names[i]}\r\n\t\t\t\t\t\t</Typography.Text>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { Input } from 'webmidi';\r\nimport { useSourceNotes, useColors } from '../hooks';\r\nimport { Keyboard, KeyboardProps } from './keyboard';\r\nimport { mapObj } from '../utils';\r\nimport { KeyboardSource } from './keyboard-source';\r\nimport { Row, Col } from 'antd';\r\nimport { CircleOfFifths } from './circle-of-fifths';\r\nimport { InputColors } from './input-colors';\r\nimport { InputSizes } from './input-sizes';\r\nimport { Midi, Note, Scale } from '@tonaljs/tonal';\r\n\r\nexport interface SourceDashboardProps {\r\n\tsource: Input\r\n}\r\n\r\nexport function SourceDashboard({\r\n\tsource,\r\n}: SourceDashboardProps) {\r\n\tconst notes = useSourceNotes(source)\r\n\tconst [colors] = useColors()\r\n\r\n\tconst pressed = new Set(\r\n\t\tObject.keys(notes).map((midi) => (\r\n\t\t\tMidi.midiToNoteName(+midi, { pitchClass: true })\r\n\t\t))\r\n\t)\r\n\r\n\tconst keyProps = mapObj(notes, (event): React.SVGProps<SVGRectElement> => ({\r\n\t\tfill: event.note.number in notes ? colors[Note.chroma(Midi.midiToNoteName(event.note.number)!)!] : undefined\r\n\t}))\r\n\r\n\tconst pathProps = Array.from({ length: 12 }, (_, i) => {\r\n\t\tconst tonic = (i + 7) % 12\r\n\t\tconst name = Midi.midiToNoteName(tonic, { pitchClass: true })!\r\n\t\t// const scale = Scale.get([name, 'major'])\r\n\t\treturn Array.from({ length: 12 }, (_, j) => {\r\n\t\t\tconst midi = (j + tonic) % 12\r\n\t\t\tconst note = Midi.midiToNoteName(midi, { pitchClass: true })\r\n\t\t\treturn {\r\n\t\t\t\tname,\r\n\t\t\t\tmidi,\r\n\t\t\t\tnote,\r\n\t\t\t\tfill: pressed.has(note) ? colors[midi % 12] : undefined\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t<CircleOfFifths\r\n\t\t\t\t\t\tsvgProps={{ width: '100%' }}\r\n\t\t\t\t\t\tpathProps={pathProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t<InputColors />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t<InputSizes />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t<Keyboard\r\n\t\t\t\t\t\tsvgProps={{ width: '100%' }}\r\n\t\t\t\t\t\tkeyProps={keyProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t)\r\n}","/**\r\n * Map each value of `obj` through `fn`.\r\n * Uses `Object.entries` to collect properties.\r\n */\r\nexport function mapObj<T, U = T>(\r\n\t/** Input object */\r\n\tobj: Record<string, T> | undefined,\r\n\r\n\t/** Called with each member of the object. */\r\n\tfn: (value: T, key: string) => U\r\n): Record<string, U> {\r\n\tif (!obj) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\treturn Object.fromEntries(\r\n\t\tObject.entries(obj ?? {}).map(([key, value]) => [\r\n\t\t\tkey,\r\n\t\t\tfn(value, key),\r\n\t\t] as const)\r\n\t)\r\n}","import React from 'react'\r\nimport { Input, InputEventNoteon, InputEventNoteoff } from 'webmidi'\r\n\r\nexport type SourceNotes = Record<string, InputEventNoteon>\r\n\r\nexport function useSourceNotes(source: Input) {\r\n\tconst [notes, setNotes] = React.useState<SourceNotes>({})\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tconst onNoteOn = (event: InputEventNoteon) => {\r\n\t\t\t\tsetNotes((curr) => {\r\n\t\t\t\t\tconst next = { ...curr, [event.note.number]: event }\r\n\t\t\t\t\treturn next\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tconst onNoteOff = (event: InputEventNoteoff) => {\r\n\t\t\t\tsetNotes((curr) => {\r\n\t\t\t\t\tconst { [event.note.number]: _, ...next } = curr\r\n\t\t\t\t\treturn next\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsource.addListener('noteon', 'all', onNoteOn)\r\n\t\t\tsource.addListener('noteoff', 'all', onNoteOff)\r\n\t\t\treturn () => {\r\n\t\t\t\tsource.removeListener('noteon', 'all', onNoteOn)\r\n\t\t\t\tsource.removeListener('noteoff', 'all', onNoteOff)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[source],\r\n\t)\r\n\r\n\treturn notes\r\n}","import React from 'react';\nimport { useSources, ProvideShared } from './hooks';\nimport { Card, Divider, Alert, Row, Col } from 'antd';\nimport { SourceDashboard } from './components/source-dashboard';\n\nconst empty = (\n  <Alert\n    type='warning'\n    message='Please connect a midi input device'\n  />\n)\n\nexport default function App() {\n  const sources = useSources()\n\n  return (\n    <ProvideShared>\n      <Row align='middle' gutter={8}>\n        <Col>\n          <h1>Rainbow of Fifths</h1>\n        </Col>\n        <Col>\n          <a href=\"https://github.com/mmmveggies/rainbow-of-fifths\">view source or give feedback on GitHub</a>\n        </Col>\n      </Row>\n      {sources.length ? sources.map((source) => (\n        <Card\n          key={source.id}\n          title={(\n            <>\n              <h3>\n                {source.name}\n                <Divider type='vertical' />\n                {source.manufacturer}\n                <Divider type='vertical' />\n                {source.id}\n              </h3>\n            </>\n          )}\n        >\n          <SourceDashboard source={source} />\n        </Card>\n      )) : empty}\n    </ProvideShared>\n  );\n}\n","import React from 'react'\r\nimport WebMidi, { WebMidiEventConnected, WebMidiEventDisconnected } from 'webmidi'\r\n\r\nexport function useSources() {\r\n\tconst [sources, setSources] = React.useState(WebMidi.inputs)\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tconst onConnected = ({ port }: WebMidiEventConnected) => {\r\n\t\t\t\tif (port.type === 'input') {\r\n\t\t\t\t\tsetSources((curr) => {\r\n\t\t\t\t\t\tconst next = curr.filter((source) => source.id !== port.id)\r\n\t\t\t\t\t\treturn [...next, port]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst onDisconnected = ({ port }: WebMidiEventDisconnected) => {\r\n\t\t\t\tsetSources((curr) => {\r\n\t\t\t\t\tconst removed = curr.filter((source) => source.id !== port.id)\r\n\t\t\t\t\treturn curr.length === removed.length ? curr : removed\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tWebMidi.addListener('connected', onConnected)\r\n\t\t\tWebMidi.addListener('disconnected', onDisconnected)\r\n\t\t\treturn () => {\r\n\t\t\t\tWebMidi.removeListener('connected', onConnected)\r\n\t\t\t\tWebMidi.removeListener('disconnected', onDisconnected)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[],\r\n\t)\r\n\r\n\treturn sources\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Alert } from 'antd'\nimport WebMidi from 'webmidi'\n\nimport './index.css';\nimport 'antd/dist/antd.css'\n\nconst render = (node: React.ReactElement) => {\n  ReactDOM.render(node, document.getElementById('root'))\n}\n\nWebMidi.enable((err) => {\n  if (err) {\n    render(\n      <Alert\n        type='error'\n        message='Fatal WebMidi Error'\n        description={<code><pre>{JSON.stringify(err, null, 2)}</pre></code>}\n      />\n    )\n    return\n  }\n\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  )\n})\n"],"sourceRoot":""}